import { initGenerator } from '@nx/js';
import {
  Tree,
  names,
  generateFiles,
  joinPathFragments,
  GeneratorCallback,
  logger
} from '@nx/devkit';
import * as chalk from 'chalk';

import { NormalizedReactSinglespaGeneratorSchema } from '../application/schema';
import { log } from 'console';
// TODO remove unnecessary default files
export async function removeFiles(
  tree: Tree,
  options: NormalizedReactSinglespaGeneratorSchema
) {
  await initGenerator(tree, options);
}
// TODO add files from template for single spa support
export async function addSingleSpaFiles(
  tree: Tree,
  options: NormalizedReactSinglespaGeneratorSchema
)  {
  const templateOptions = {
    ...options,
    ...names(options.projectOrganization),
    ...names(options.projectName),
    templ: '',
  };
  logger.warn(`addSingleSpaFiles, ${joinPathFragments(__dirname, '..','files')}`)
  generateFiles(
    tree,
    joinPathFragments(__dirname, '..','application','files'),
    options.appProjectRoot,
    templateOptions
  );
  logger.info(`${chalk.bold.yellow('addSingleSpaFiles')} has options: ${JSON.stringify(options)}`);
}
// TODO update template files generated by nx
export async function updateTemplateFiles() {}
export async function updateFiles(
  tree: Tree,
  options: NormalizedReactSinglespaGeneratorSchema
): Promise<GeneratorCallback> {
    return () => {
      addSingleSpaFiles(tree, options);
    }
}
export default updateFiles;
